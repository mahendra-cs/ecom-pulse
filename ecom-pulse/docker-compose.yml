version: '3.8'
services:
  order-service:
    build: ./order-service
    ports:
      - "8083:8083"
    networks:
      - ecom-pulse-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 10s
      timeout: 10s
      retries: 10
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  payment-service:
    build: ./payment-service
    ports:
      - "8082:8082"
    networks:
      - ecom-pulse-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 10s
      timeout: 10s
      retries: 10
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  inventory-service:
    build: ./inventory-service
    ports:
      - "8081:8081"
    networks:
      - ecom-pulse-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 10s
      timeout: 10s
      retries: 10
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  jmeter:
    build: ./jmeter
    # volumes:
    #   - ./jmeter/results:/jmeter/results
    networks:
      - ecom-pulse-network
    depends_on:
      order-service:
        condition: service_healthy
      payment-service:
        condition: service_healthy
      inventory-service:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  jmeter-starter:
    build: ./jmeter-starter
    ports:
      - "5001:5001"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./jmeter-starter:/app
      - ./jmeter:/jmeter
    working_dir: /app
    networks:
      - ecom-pulse-network
    depends_on:
      - order-service
      - payment-service
      - inventory-service
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus:/etc/prometheus
    command: --config.file=/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - ecom-pulse-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    command: /bin/sh -c "mkdir -p /etc/grafana/provisioning/dashboards && /run.sh"
    ports:
      - "3000:3000"
    networks:
      - ecom-pulse-network
    depends_on:
      - prometheus
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
  
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    # volumes:
    #   - ./loki-config.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - ecom-pulse-network

  promtail:
    image: grafana/promtail:latest
    # volumes:
    #   - ./promtail-config.yaml:/etc/promtail/config.yml
    #   - /var/lib/docker/containers:/var/lib/docker/containers
    command: -config.file=/etc/promtail/config.yml
    networks:
      - ecom-pulse-network

networks:
  ecom-pulse-network:
    driver: bridge
